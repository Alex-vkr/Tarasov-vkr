package api_db

import (
	"diplom-vuls-server/internal/model"
	custom_errors "diplom-vuls-server/pkg/custom-errors"
	"github.com/restream/reindexer/v3"
	"github.com/valyala/fasthttp"
)

func CheckExistingVulnerabilityDB(item *model.VulnerabilityItem, db *reindexer.Reindexer) bool {
	_, found := db.Query("vulnerability").
		WhereString("bdu_id", reindexer.EQ, item.BDUID).Get()

	return found
}

func CreateVulDB(item *model.VulnerabilityItem, db *reindexer.Reindexer) *custom_errors.ErrHttp {
	inserted, err := db.Insert("vulnerability", item, "id=serial()")
	if err != nil {
		return custom_errors.New(fasthttp.StatusInternalServerError, "insert vulnerability: "+err.Error())
	}

	if inserted == 0 {
		return custom_errors.New(fasthttp.StatusInternalServerError, "insert vulnerability: something went wrong")
	}

	return nil
}
